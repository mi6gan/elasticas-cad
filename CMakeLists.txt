cmake_minimum_required(VERSION 2.8)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
#set(CMAKE_VERBOSE_MAKEFILE ON)
set(BUILD_EL3D_MODULE TRUE CACHE BOOL "Build 3d module")
set(BUILD_EL2D_MODULE TRUE CACHE BOOL "Build 2d module")
set(BUILD_OLD_2D_MODULE TRUE CACHE BOOL "Build old 2d module")
set(BUILD_DEBUG TRUE CACHE BOOL "Build debug version")
set(COPY_DATA_FILES TRUE CACHE BOOL "Automatically copy data files from data/ to output directory")
if(WIN32)
        if(MSVC)
            set(GLOBAL_EXEC_DEFS ${GLOBAL_EXEC_DEFS} _USE_MATH_DEFINES)
        else()
            set (GLOBAL_EXEC_LIBS ${GLOBAL_EXEC_LIBS} mingw32 ${QT_QTMAIN_LIBRARY})
            set(GLOBAL_EXEC_DEFS ${GLOBAL_EXEC_DEFS} main=qMain)
        endif()
endif()
set(GLOBAL_EXEC_DEFS "FOO "${GLOBAL_EXEC_DEFS}";")
if(BUILD_DEBUG)
  set(ELOUTPUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/debug)
else()
  set(ELOUTPUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/release)
endif()
project(Elasticas)
find_package(Qt4 COMPONENTS QtCore QtGui QtSql QtXml QtOpenGL REQUIRED)
find_package(OpenGL)
find_package(PythonLibs 2.7)
set(INCLUDE_DIRS ${QT_INCLUDE_DIR} ${QT_QTGUI_INCLUDE_DIR} ${QT_QTSQL_INCLUDE_DIR} ${QT_QTCORE_INCLUDE_DIR} ${QT_QTXML_INCLUDE_DIR} ${QT_QTOPENGL_DIR} ./src/)
if(QT_QTCORE_FOUND AND QT_QTGUI_FOUND AND QT_QTXML_FOUND)
  if(QT_QTSQL_FOUND)
    INCLUDE(src/main/CMakeInclude.txt)
  endif()
  INCLUDE(src/elcore/CMakeInclude.txt)
  if(BUILD_DEBUG AND QT_QTSQL_FOUND)
    add_definitions(-ggdb)
    INCLUDE(src/debug_module/CMakeInclude.txt)
  endif()
  if(BUILD_EL2D_MODULE)
    INCLUDE(src/el2d_module/CMakeInclude.txt)
  endif()
  if(BUILD_OLD_2D_MODULE)
    INCLUDE(src/old_2d_module/CMakeInclude.txt)
  endif()
  if(OPENGL_FOUND AND QT_QTOPENGL_FOUND AND PYTHONLIBS_FOUND AND BUILD_EL3D_MODULE)
    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src/kongomato ${CMAKE_CURRENT_SOURCE_DIR}/src/kongomato)
    add_definitions(-DWITH_QT4)
    link_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/kongomato)
    set(INCLUDE_DIRS ${INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/src/kongomato ${CMAKE_CURRENT_SOURCE_DIR}/src/kongomato/3rd_party/carve/include ${PYTHON_INCLUDE_PATH})
    INCLUDE(src/el3d_module/CMakeInclude.txt)
  endif()
endif()
if(COPY_DATA_FILES)
  file(GLOB DATA_FILES data/*)
  foreach(DATA_FILE ${DATA_FILES})
   file(COPY ${DATA_FILE} DESTINATION ${ELOUTPUT_DIR})
  endforeach()
endif()
include_directories(${INCLUDE_DIRS})
